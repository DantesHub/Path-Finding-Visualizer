{"version":3,"sources":["PathFindingVisualizer/Node/Node.jsx","util/PriorityQueue.js","algorithms/dijkstra.js","algorithms/aStar.js","algorithms/dfs.js","algorithms/bfs.js","PathFindingVisualizer/PathfindingVisualizer.jsx","components/MainButtons.jsx","components/Buttons/DropDownAlgorithms.jsx","actions/ChooseAlgo.jsx","components/Buttons/DropDownSpeeds.jsx","actions/ChooseSpeed.jsx","components/Buttons.jsx","actions/Visualize.jsx","actions/ClearBoard.jsx","components/MainHeader.jsx","reducers/buttons.jsx","reducers/algorithms.jsx","reducers/speeds.jsx","reducers/index.jsx","store.jsx","App.js","serviceWorker.js","index.js"],"names":["Node","this","props","col","isFinish","isStart","isWall","onMouseDown","onMouseEnter","onMouseUp","row","extraClassName","id","className","Component","parent","i","left","right","PriorityQueue","comparator","a","b","_heap","_comparator","length","size","values","forEach","value","push","_siftUp","poppedValue","peek","bottom","_swap","pop","_siftDown","replacedValue","j","node","_greater","maxChild","getNeighbors","grid","neighbors","manhattanDistance","start","end","Math","abs","dfs","startNode","endNode","visitedNodes","stack","seen","console","log","closestNode","nodesToVisit","previousNode","getNodesInShortestPathOrderDFS","finishNode","nodesInShortestPathOrder","currentNode","unshift","PathfindingVisualizer","state","visualize","speed","onStartNode","onFinishNode","mouseIsPressed","getInitialGrid","setState","previousProps","button","algo","visualizeDijkstra","visualizeAStar","visualizeDFS","visualizeBFS","clearBoard","newGrid","getNewGridWithWallToggled","visitedNodesInOrder","setTimeout","animateShortestPath","document","getElementById","distance","Infinity","heuristic","visited","querySelector","queue","cost","Array","fill","map","n","isEmpty","curr","nextNodes","new_cost","dijkstra","getNodesInShortestPathOrder","animateSearch","targetNode","aStar","getNodesInShortestPathOrderA","shift","bfs","getNodesInShortestPathOrderBFS","Fragment","rowIdx","key","nodeIdx","handleMouseDown","handleMouseEnter","handleMouseUp","currentRow","createNode","isVisited","slice","newNode","connect","buttons","algorithms","speeds","MainButtons","children","DropDownAlgorithms","displayMenu","dActive","bfsActive","dfsActive","aStarActive","showDropdownMenu","bind","hideDropdownMenu","event","preventDefault","addEventListener","removeEventListener","chooseAlgo","onClick","toggleClass","React","dispatch","type","payload","DropDownSpeeds","fast","medium","slow","chooseSpeed","MainHeader","initialState","clicked","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","style","marginTop","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.99e3f6c8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"./Node.css\";\n\nexport default class Node extends Component {\n  render() {\n    const {\n      col,\n      isFinish,\n      isStart,\n      isWall,\n      onMouseDown,\n      onMouseEnter,\n      onMouseUp,\n      row\n    } = this.props;\n    const extraClassName = isFinish\n      ? \"node-finish\"\n      : isStart\n      ? \"node-start\"\n      : isWall\n      ? \"node-wall\"\n      : \"\";\n\n    return (\n      <div\n        id={`node-${row}-${col}`}\n        className={`node ${extraClassName}`}\n        onMouseDown={() => onMouseDown(row, col)} //create wall\n        onMouseEnter={() => onMouseEnter(row, col)} //hover above element\n        onMouseUp={() => onMouseUp()}\n      ></div>\n    );\n  }\n}\n","const top = 0;\nconst parent = i => ((i + 1) >>> 1) - 1;\nconst left = i => (i << 1) + 1;\nconst right = i => (i + 1) << 1;\n\nclass PriorityQueue {\n  constructor(comparator = (a, b) => a > b) {\n    this._heap = [];\n    this._comparator = comparator;\n  }\n  size() {\n    return this._heap.length;\n  }\n\n  isEmpty() {\n    return this.size() === 0;\n  }\n\n  peek() {\n    return this._heap[top];\n  }\n\n  push(...values) {\n    values.forEach(value => {\n      this._heap.push(value);\n      this._siftUp();\n    });\n    return this.size();\n  }\n\n  pop() {\n    const poppedValue = this.peek();\n    const bottom = this.size() - 1;\n    if (bottom > top) {\n      this._swap(top, bottom);\n    }\n    this._heap.pop();\n    this._siftDown();\n    return poppedValue;\n  }\n\n  replace(value) {\n    const replacedValue = this.peek();\n    this._heap[top] = value;\n    this._siftDown();\n    return replacedValue;\n  }\n\n  _greater(i, j) {\n    return this._comparator(this._heap[i], this._heap[j]);\n  }\n\n  _swap(i, j) {\n    [this._heap[i], this._heap[j]] = [this._heap[j], this._heap[i]];\n  }\n\n  _siftUp() {\n    let node = this.size() - 1;\n    while (node > top && this._greater(node, parent(node))) {\n      this._swap(node, parent(node));\n      node = parent(node);\n    }\n  }\n\n  _siftDown() {\n    let node = top;\n    while (\n      (left(node) < this.size() && this._greater(left(node), node)) ||\n      (right(node) < this.size() && this._greater(right(node), node))\n    ) {\n      let maxChild =\n        right(node) < this.size() && this._greater(right(node), left(node))\n          ? right(node)\n          : left(node);\n      this._swap(node, maxChild);\n      node = maxChild;\n    }\n  }\n}\n\nexport default PriorityQueue;\n","import PriorityQueue from \"../util/PriorityQueue\";\n\nexport function dijkstra(grid, startNode) {\n  var queue = new PriorityQueue(\n    (a, b) => cost[a.row][a.col] < cost[b.row][b.col]\n  );\n\n  let cost = Array(grid.length)\n    .fill(0)\n    .map(n => new Array(grid[0].length).fill(null));\n\n  cost[startNode.row][startNode.col] = 0;\n\n  let visited = [];\n\n  queue.push(startNode);\n\n  while (!queue.isEmpty()) {\n    let curr = queue.pop();\n\n    visited.push(curr);\n\n    //Early exit\n    if (curr.isFinish) {\n      return visited;\n    }\n\n    let nextNodes = getNeighbors(curr, grid);\n\n    for (const node of nextNodes) {\n      let new_cost = cost[curr.row][curr.col] + 1;\n      if (\n        (node.isFinish || !node.isWall) &&\n        (cost[node.row][node.col] == null ||\n          new_cost < cost[node.row][node.col])\n      ) {\n        cost[node.row][node.col] = new_cost;\n        node.previousNode = curr;\n        queue.push(node);\n      }\n    }\n  }\n\n  return visited;\n}\n\nfunction getNeighbors(node, grid) {\n  const neighbors = [];\n  const { row, col } = node;\n  //Up\n  if (row > 0) neighbors.push(grid[row - 1][col]);\n  //Down\n  if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\n  //Left\n  if (col > 0) neighbors.push(grid[row][col - 1]);\n  //Right\n  if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\n  return neighbors;\n}\n// Backtracks from the finishNode to find the shortest path.\n// Only works when called *after* the dijkstra method above.\nexport function getNodesInShortestPathOrder(finishNode) {\n  const nodesInShortestPathOrder = [];\n  let currentNode = finishNode;\n  while (currentNode !== null) {\n    nodesInShortestPathOrder.unshift(currentNode);\n    currentNode = currentNode.previousNode;\n  }\n  return nodesInShortestPathOrder;\n}\n","import PriorityQueue from \"../util/PriorityQueue\";\n\nexport function aStar(grid, startNode, targetNode) {\n  const queue = new PriorityQueue(\n    (a, b) =>\n      cost[a.row][a.col] + manhattanDistance(a, targetNode) <=\n      cost[b.row][b.col] + manhattanDistance(b, targetNode)\n  );\n\n  let cost = Array(grid.length)\n    .fill(0)\n    .map(n => new Array(grid[0].length).fill(null));\n\n  cost[startNode.row][startNode.col] = 0;\n\n  let visited = [];\n\n  queue.push(startNode);\n\n  while (!queue.isEmpty()) {\n    let curr = queue.pop();\n    visited.push(curr);\n    //Early exit\n    if (curr.isFinish) return visited;\n\n    let nextNodes = getNeighbors(curr, grid);\n\n    for (const node of nextNodes) {\n      let new_cost = cost[curr.row][curr.col] + 1;\n      if (\n        (node.isFinish || !node.isWall) &&\n        (cost[node.row][node.col] == null ||\n          new_cost < cost[node.row][node.col])\n      ) {\n        cost[node.row][node.col] = new_cost;\n        node.previousNode = curr;\n        queue.push(node);\n      }\n    }\n  }\n\n  return visited;\n}\n\nfunction getNeighbors(node, grid) {\n  const neighbors = [];\n  const { row, col } = node;\n  //Up\n  if (row > 0) neighbors.push(grid[row - 1][col]);\n  //Down\n  if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\n  //Left\n  if (col > 0) neighbors.push(grid[row][col - 1]);\n  //Right\n  if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\n  return neighbors;\n}\n\n//Hueristics\nfunction manhattanDistance(start, end) {\n  return Math.abs(start.row - end.row) + Math.abs(start.col - end.col);\n}\n\nexport function getNodesInShortestPathOrderA(finishNode) {\n  const nodesInShortestPathOrder = [];\n  let currentNode = finishNode;\n  console.log(currentNode);\n  while (currentNode !== null) {\n    nodesInShortestPathOrder.unshift(currentNode);\n    currentNode = currentNode.previousNode;\n    console.log(currentNode);\n  }\n  return nodesInShortestPathOrder;\n}\n","export function dfs(grid, startNode, endNode) {\n  let visitedNodes = [];\n  let stack = [startNode];\n  startNode.seen = true;\n\n  while (stack.length > 0) {\n    console.log(\"stack\");\n    const node = stack.pop();\n    visitedNodes.push(node);\n\n    if (node === endNode) {\n      console.log(\"over here\");\n      return visitedNodes;\n    }\n    getNeighbors(node, grid, stack);\n  }\n  return visitedNodes;\n}\n\nfunction getNeighbors(closestNode, grid, nodesToVisit) {\n  let { row, col } = closestNode;\n  console.log(row, col);\n  if (row > 0) {\n    let node = grid[row - 1][col];\n    if (!node.seen && !node.isWall) {\n      node.seen = true;\n      node.previousNode = closestNode;\n      nodesToVisit.push(node);\n    }\n  }\n\n  if (row < grid.length - 1) {\n    let node = grid[row + 1][col];\n    if (!node.seen && !node.isWall) {\n      node.seen = true;\n      node.previousNode = closestNode;\n      nodesToVisit.push(node);\n    }\n  }\n\n  if (col > 0) {\n    let node = grid[row][col - 1];\n    if (!node.seen && !node.isWall) {\n      node.seen = true;\n      node.previousNode = closestNode;\n      nodesToVisit.push(node);\n    }\n  }\n\n  if (col < grid[row].length - 1) {\n    let node = grid[row][col + 1];\n    if (!node.seen && !node.isWall) {\n      node.seen = true;\n      node.previousNode = closestNode;\n      nodesToVisit.push(node);\n    }\n  }\n}\n\nexport function getNodesInShortestPathOrderDFS(finishNode) {\n  const nodesInShortestPathOrder = [];\n  let currentNode = finishNode;\n  while (currentNode !== null) {\n    nodesInShortestPathOrder.unshift(currentNode);\n    currentNode = currentNode.previousNode;\n  }\n  return nodesInShortestPathOrder;\n}\n","export function bfs(grid, startNode, endNode) {\n  let queue = [startNode];\n  let visitedNodes = [];\n  startNode.seen = true;\n\n  while (queue.length > 0) {\n    const node = queue.shift();\n    visitedNodes.push(node);\n\n    if (node === endNode) {\n      return visitedNodes;\n    }\n\n    getNeighbors(node, grid, queue);\n  }\n  return visitedNodes;\n}\n\nfunction getNeighbors(closestNode, grid, nodesToVisit) {\n  let { row, col } = closestNode;\n\n  if (row > 0) {\n    let node = grid[row - 1][col];\n    if (!node.seen && !node.isWall) {\n      node.seen = true;\n      node.previousNode = closestNode;\n      nodesToVisit.push(node);\n    }\n  }\n\n  if (row < grid.length - 1) {\n    let node = grid[row + 1][col];\n    if (!node.seen && !node.isWall) {\n      node.seen = true;\n      node.previousNode = closestNode;\n      nodesToVisit.push(node);\n    }\n  }\n\n  if (col > 0) {\n    let node = grid[row][col - 1];\n    if (!node.seen && !node.isWall) {\n      node.seen = true;\n      node.previousNode = closestNode;\n      nodesToVisit.push(node);\n    }\n  }\n\n  if (col < grid[row].length - 1) {\n    let node = grid[row][col + 1];\n    if (!node.seen && !node.isWall) {\n      node.seen = true;\n      node.previousNode = closestNode;\n      nodesToVisit.push(node);\n    }\n  }\n}\n\nexport function getNodesInShortestPathOrderBFS(finishNode) {\n  const nodesInShortestPathOrder = [];\n  let currentNode = finishNode;\n  while (currentNode !== null) {\n    nodesInShortestPathOrder.unshift(currentNode);\n    currentNode = currentNode.previousNode;\n  }\n  return nodesInShortestPathOrder;\n}\n","import React, { Component } from \"react\";\nimport Node from \"./Node/Node\";\nimport { connect } from \"react-redux\";\nimport { dijkstra, getNodesInShortestPathOrder } from \"../algorithms/dijkstra\";\nimport { aStar, getNodesInShortestPathOrderA } from \"../algorithms/aStar\";\nimport { dfs, getNodesInShortestPathOrderDFS } from \"../algorithms/dfs\";\nimport { bfs, getNodesInShortestPathOrderBFS } from \"../algorithms/bfs\";\n\nimport \"./PathfindingVisualizer.css\";\n\nconst START_NODE_ROW = 12;\nconst START_NODE_COL = 15;\nconst FINISH_NODE_ROW = 12;\nconst FINISH_NODE_COL = 40;\nconst ROW_NUMBERS = 30;\nconst COL_NUMBERS = 55;\n\nclass PathfindingVisualizer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visualize: false,\n      speed: 10,\n      grid: [],\n      onStartNode: false,\n      startNode: [START_NODE_ROW, START_NODE_COL],\n      onFinishNode: false,\n      finishNode: [FINISH_NODE_ROW, FINISH_NODE_COL],\n      mouseIsPressed: false\n    };\n  }\n\n  componentDidMount() {\n    const grid = getInitialGrid();\n    this.setState({ grid });\n  }\n\n  componentDidUpdate(previousProps) {\n    if (this.props.button === \"visualize\" && this.props.algo === \"dijkstra\") {\n      this.visualizeDijkstra();\n    } else if (\n      this.props.button === \"visualize\" &&\n      this.props.algo === \"aStar\"\n    ) {\n      this.visualizeAStar();\n    } else if (this.props.button === \"visualize\" && this.props.algo === \"dfs\") {\n      this.visualizeDFS();\n    } else if (this.props.button === \"visualize\" && this.props.algo === \"bfs\") {\n      this.visualizeBFS();\n    } else if (this.props.button === \"clear\") {\n      if (previousProps.button !== this.props.button) {\n        this.clearBoard();\n      }\n    }\n\n    if (this.props.speed === \"fast\") {\n      if (previousProps.speed !== this.props.speed) {\n        this.setState({ speed: 10 });\n      }\n    } else if (this.props.speed === \"medium\") {\n      if (previousProps.speed !== this.props.speed) {\n        this.setState({ speed: 30 });\n      }\n    } else if (this.props.speed === \"slow\") {\n      if (previousProps.speed !== this.props.speed) {\n        this.setState({ speed: 50 });\n      }\n    }\n  }\n\n  handleMouseDown(row, col) {\n    const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\n    this.setState({ grid: newGrid, mouseIsPressed: true });\n  }\n\n  handleMouseEnter(row, col) {\n    if (!this.state.mouseIsPressed) return;\n    const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\n    this.setState({ grid: newGrid });\n  }\n\n  handleMouseUp() {\n    this.setState({ mouseIsPressed: false });\n  }\n\n  animateSearch(visitedNodesInOrder, nodesInShortestPathOrder) {\n    for (let i = 0; i <= visitedNodesInOrder.length; i++) {\n      if (i === visitedNodesInOrder.length) {\n        setTimeout(() => {\n          this.animateShortestPath(nodesInShortestPathOrder);\n        }, this.state.speed * i);\n        return true;\n      }\n      setTimeout(() => {\n        const node = visitedNodesInOrder[i];\n        document.getElementById(`node-${node.row}-${node.col}`).className =\n          \"node node-visited\";\n      }, this.state.speed * i);\n    }\n  }\n\n  animateShortestPath(nodesInShortestPathOrder) {\n    for (let i = 0; i < nodesInShortestPathOrder.length; i++) {\n      setTimeout(() => {\n        const node = nodesInShortestPathOrder[i];\n        document.getElementById(`node-${node.row}-${node.col}`).className =\n          \"node node-shortest-path\";\n      }, 50 * i);\n    }\n  }\n\n  clearBoard() {\n    const { grid, startNode, finishNode } = this.state;\n    for (let row = 0; row < ROW_NUMBERS; row++) {\n      for (let col = 0; col < COL_NUMBERS; col++) {\n        grid[row][col].distance = Infinity;\n        grid[row][col].isWall = false;\n        grid[row][col].heuristic = 0;\n        grid[row][col].visited = false;\n        grid[row][col].parent = null;\n        grid[row][col].seen = false;\n        if (grid[row][col] === grid[startNode[0]][startNode[1]]) {\n          document.querySelector(`#node-${row}-${col}`).className =\n            \"node node-start\";\n        } else if (grid[row][col] === grid[finishNode[0]][finishNode[1]]) {\n          document.querySelector(`#node-${row}-${col}`).className =\n            \"node node-finish\";\n        } else {\n          document.querySelector(`#node-${row}-${col}`).className = \"node\";\n        }\n      }\n    }\n  }\n\n  visualizeDijkstra() {\n    const { grid } = this.state;\n    const startNode = grid[START_NODE_ROW][START_NODE_COL];\n    const finishNode = grid[FINISH_NODE_ROW][FINISH_NODE_COL];\n    const visitedNodesInOrder = dijkstra(grid, startNode);\n    const nodesInShortestPathOrder = getNodesInShortestPathOrder(finishNode);\n    this.animateSearch(visitedNodesInOrder, nodesInShortestPathOrder);\n  }\n\n  async visualizeDFS() {\n    const { grid } = this.state;\n    console.log(grid[14]);\n    const startNode = grid[START_NODE_ROW][START_NODE_COL];\n    const finishNode = grid[FINISH_NODE_ROW][FINISH_NODE_COL];\n    const visitedNodesInOrder = dfs(grid, startNode, finishNode);\n    const nodesInShortestPathOrder = getNodesInShortestPathOrderDFS(finishNode);\n    await this.animateSearch(visitedNodesInOrder, nodesInShortestPathOrder);\n    this.setState({ visualize: false });\n    console.log(\"bang\");\n  }\n\n  visualizeAStar() {\n    const { grid } = this.state;\n    const startNode = grid[START_NODE_ROW][START_NODE_COL];\n    const finishNode = grid[FINISH_NODE_ROW][FINISH_NODE_COL];\n    const visitedNodesInOrder = aStar(grid, startNode, finishNode);\n    const nodesInShortestPathOrder = getNodesInShortestPathOrderA(finishNode);\n    this.animateSearch(visitedNodesInOrder, nodesInShortestPathOrder);\n  }\n\n  visualizeBFS() {\n    const { grid } = this.state;\n    const startNode = grid[START_NODE_ROW][START_NODE_COL];\n    const finishNode = grid[FINISH_NODE_ROW][FINISH_NODE_COL];\n    const visitedNodesInOrder = bfs(grid, startNode, finishNode);\n    const nodesInShortestPathOrder = getNodesInShortestPathOrderBFS(finishNode);\n    this.animateSearch(visitedNodesInOrder, nodesInShortestPathOrder);\n  }\n\n  render() {\n    const { grid, mouseIsPressed } = this.state;\n    return (\n      <React.Fragment>\n        <div className='grid'>\n          {grid.map((row, rowIdx) => {\n            return (\n              <div key={rowIdx}>\n                {row.map((node, nodeIdx) => {\n                  const { row, col, isFinish, isStart, isWall } = node;\n                  return (\n                    <Node\n                      key={nodeIdx}\n                      col={col}\n                      isFinish={isFinish}\n                      isStart={isStart}\n                      isWall={isWall}\n                      mouseIsPressed={mouseIsPressed}\n                      onMouseDown={(row, col) => this.handleMouseDown(row, col)}\n                      onMouseEnter={(row, col) =>\n                        this.handleMouseEnter(row, col)\n                      }\n                      onMouseUp={() => this.handleMouseUp()}\n                      row={row}\n                    ></Node>\n                  );\n                })}\n              </div>\n            );\n          })}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\nconst getInitialGrid = () => {\n  const grid = [];\n  for (let row = 0; row < 28; row++) {\n    const currentRow = [];\n    for (let col = 0; col < 55; col++) {\n      currentRow.push(createNode(col, row));\n    }\n    grid.push(currentRow);\n  }\n  return grid;\n};\nconst createNode = (col, row) => {\n  return {\n    col,\n    row,\n    isStart: row === START_NODE_ROW && col === START_NODE_COL,\n    isFinish: row === FINISH_NODE_ROW && col === FINISH_NODE_COL,\n    distance: Infinity,\n    isVisited: false,\n    isWall: false,\n    previousNode: null\n  };\n};\nconst getNewGridWithWallToggled = (grid, row, col) => {\n  const newGrid = grid.slice();\n  const node = newGrid[row][col];\n  const newNode = {\n    ...node,\n    isWall: !node.isWall\n  };\n  newGrid[row][col] = newNode;\n  return newGrid;\n};\n\nconst mapStateToProps = state => ({\n  button: state.buttons.button,\n  algo: state.algorithms.algo,\n  speed: state.speeds.speed\n});\n\nexport default connect(mapStateToProps)(PathfindingVisualizer);\n","import React from \"react\";\nimport \"./MainButtons.css\";\n\nconst MainButtons = props => {\n  return <header className='main-header'>{props.children}</header>;\n};\n\nexport default MainButtons;\n","import React from \"react\";\nimport \"./DropDownButton.css\";\nimport { connect } from \"react-redux\";\nimport { chooseAlgo } from \"../../actions/ChooseAlgo\";\n\nclass DropDownAlgorithms extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      displayMenu: false,\n      dActive: true,\n      bfsActive: false,\n      dfsActive: false,\n      aStarActive: false\n    };\n\n    this.showDropdownMenu = this.showDropdownMenu.bind(this);\n    this.hideDropdownMenu = this.hideDropdownMenu.bind(this);\n  }\n\n  showDropdownMenu(event) {\n    event.preventDefault();\n    this.setState({ displayMenu: true }, () => {\n      document.addEventListener(\"click\", this.hideDropdownMenu);\n    });\n  }\n\n  hideDropdownMenu() {\n    this.setState({ displayMenu: false }, () => {\n      document.removeEventListener(\"click\", this.hideDropdownMenu);\n    });\n  }\n\n  toggleClass(algo) {\n    this.props.chooseAlgo(algo);\n    if (algo === \"dijkstra\") {\n      this.setState({\n        dActive: true,\n        aStarActive: false,\n        bfsActive: false,\n        dfsActive: false\n      });\n    } else if (algo === \"aStar\") {\n      this.setState({\n        aStarActive: true,\n        bfsActive: false,\n        dfsActive: false,\n        dActive: false\n      });\n    } else if (algo === \"bfs\") {\n      this.setState({\n        bfsActive: true,\n        dfsActive: false,\n        dActive: false,\n        aStarActive: false\n      });\n    } else if (algo === \"dfs\") {\n      this.setState({\n        dfsActive: true,\n        dActive: false,\n        aStarActive: false,\n        bfsActive: false\n      });\n    }\n  }\n  render() {\n    return (\n      <div className='dropdown'>\n        <div className='button' onClick={this.showDropdownMenu}>\n          Algorithms{\" \"}\n        </div>\n\n        {this.state.displayMenu ? (\n          <ul>\n            <li>\n              <div\n                className={this.state.dActive ? \"active\" : null}\n                onClick={() => this.toggleClass(\"dijkstra\")}\n              >\n                dijkstra\n              </div>\n            </li>\n            <li>\n              <div\n                className={this.state.bfsActive ? \"active\" : null}\n                onClick={() => this.toggleClass(\"bfs\")}\n              >\n                BFS\n              </div>\n            </li>\n            <li>\n              <div\n                className={this.state.dfsActive ? \"active\" : null}\n                onClick={() => this.toggleClass(\"dfs\")}\n              >\n                DFS\n              </div>\n            </li>\n            <li>\n              <div\n                className={this.state.aStarActive ? \"active\" : null}\n                onClick={() => this.toggleClass(\"aStar\")}\n              >\n                A*\n              </div>\n            </li>\n          </ul>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { chooseAlgo })(DropDownAlgorithms);\n","export const chooseAlgo = algo => dispatch => {\n  console.log(algo);\n  dispatch({\n    type: algo,\n    payload: algo\n  });\n  dispatch({\n    type: \"NORMALIZE\",\n    payload: \"\"\n  });\n};\n","import React from \"react\";\nimport \"./DropDownButton.css\";\nimport { connect } from \"react-redux\";\nimport { chooseSpeed } from \"../../actions/ChooseSpeed\";\n\nclass DropDownSpeeds extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      displayMenu: false,\n      fast: true,\n      medium: false,\n      slow: false\n    };\n\n    this.showDropdownMenu = this.showDropdownMenu.bind(this);\n    this.hideDropdownMenu = this.hideDropdownMenu.bind(this);\n  }\n\n  showDropdownMenu(event) {\n    event.preventDefault();\n    this.setState({ displayMenu: true }, () => {\n      document.addEventListener(\"click\", this.hideDropdownMenu);\n    });\n  }\n\n  hideDropdownMenu() {\n    this.setState({ displayMenu: false }, () => {\n      document.removeEventListener(\"click\", this.hideDropdownMenu);\n    });\n  }\n  toggleClass(speed) {\n    this.props.chooseSpeed(speed);\n    if (speed === \"slow\") {\n      this.setState({\n        slow: true,\n        medium: false,\n        fast: false\n      });\n    } else if (speed === \"medium\") {\n      this.setState({\n        slow: false,\n        medium: true,\n        fast: false\n      });\n    } else if (speed === \"fast\") {\n      this.setState({\n        slow: false,\n        medium: false,\n        fast: true\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className='dropdown'>\n        <div className='button' onClick={this.showDropdownMenu}>\n          Speed{\" \"}\n        </div>\n\n        {this.state.displayMenu ? (\n          <ul>\n            <li>\n              <div\n                className={this.state.fast ? \"active\" : null}\n                onClick={() => this.toggleClass(\"fast\")}\n              >\n                Fast\n              </div>\n            </li>\n            <li>\n              <div\n                className={this.state.medium ? \"active\" : null}\n                onClick={() => this.toggleClass(\"medium\")}\n              >\n                Medium\n              </div>\n            </li>\n            <li>\n              <div\n                className={this.state.slow ? \"active\" : null}\n                onClick={() => this.toggleClass(\"slow\")}\n              >\n                Slow\n              </div>\n            </li>\n          </ul>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { chooseSpeed })(DropDownSpeeds);\n","export const chooseSpeed = speed => dispatch => {\n  console.log(speed);\n  dispatch({\n    type: speed,\n    payload: speed\n  });\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Buttons.css\";\nimport { connect } from \"react-redux\";\nimport DropDownAlgorithms from \"./Buttons/DropDownAlgorithms\";\nimport DropDownSpeeds from \"./Buttons/DropDownSpeeds\";\nimport { clearBoard } from \"../actions/ClearBoard\";\nimport { visualize } from \"../actions/Visualize\";\nconst Buttons = ({ visualize, clearBoard }) => {\n  return (\n    <ul className='nav-links'>\n      <DropDownAlgorithms className='dropdown' />\n      <li>\n        <button onClick={visualize}>Vizualize</button>\n      </li>\n      <li>\n        <button onClick={clearBoard}>Clear Board</button>\n      </li>\n      <li>\n        <DropDownSpeeds className='dropdown' />\n      </li>\n    </ul>\n  );\n};\n\nButtons.propTypes = {\n  visualize: PropTypes.func.isRequired,\n  clearBoard: PropTypes.func.isRequired\n};\n\nexport default connect(null, { visualize, clearBoard })(Buttons);\n","export const visualize = () => dispatch => {\n  dispatch({\n    type: \"VISUALIZE\",\n    payload: \"visualize\"\n  });\n};\n","export const clearBoard = () => dispatch => {\n  dispatch({\n    type: \"CLEAR_BOARD\",\n    payload: \"clear\"\n  });\n};\n","import React from \"react\";\nimport \"./MainHeader.css\";\nimport MainButtons from \"./MainButtons\";\nimport Buttons from \"./Buttons\";\nimport { connect } from \"react-redux\";\n\nclass MainHeader extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <MainButtons>\n          <button className='main-navigation__menu-btn'></button>\n          <h2 className='main-navigation__title'>Path Finding Visualizer</h2>\n\n          <nav className='main-navigation__header-nav'>\n            <Buttons />\n          </nav>\n        </MainButtons>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({});\n\nexport default connect(mapStateToProps)(MainHeader);\n","const initialState = {\n  button: \"\",\n  clicked: false\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case \"VISUALIZE\":\n      return {\n        ...state,\n        button: payload\n      };\n    case \"CLEAR_BOARD\":\n      return {\n        ...state,\n        button: payload\n      };\n    case \"NORMALIZE\":\n      return {\n        ...state,\n        button: payload\n      };\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  algo: \"dijkstra\"\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case \"dijkstra\":\n      return {\n        ...state,\n        algo: payload\n      };\n    case \"aStar\":\n      return {\n        ...state,\n        algo: payload\n      };\n    case \"bfs\":\n      return {\n        ...state,\n        algo: payload\n      };\n    case \"dfs\":\n      return {\n        ...state,\n        algo: payload\n      };\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  speed: \"fast\"\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case \"slow\":\n      return {\n        ...state,\n        speed: payload\n      };\n    case \"medium\":\n      return {\n        ...state,\n        speed: payload\n      };\n    case \"fast\":\n      return {\n        ...state,\n        speed: payload\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport buttons from \"./buttons\";\nimport algorithms from \"./algorithms\";\nimport speeds from \"./speeds\";\n\nexport default combineReducers({\n  buttons,\n  algorithms,\n  speeds\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from \"react\";\nimport PathfindingVisualizer from \"./PathFindingVisualizer/PathfindingVisualizer\";\nimport \"./App.css\";\nimport Header from \"./components/MainHeader\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className='App'>\n        <Header></Header>\n        <h3 style={{ marginTop: \"5rem\" }}>Drag around grid to add walls</h3>\n        <PathfindingVisualizer> </PathfindingVisualizer>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}